"use strict";(self.webpackChunkvckit_documentation=self.webpackChunkvckit_documentation||[]).push([[2015],{6961:(e,n,t)=>{t.d(n,{Ay:()=>s});var i=t(4848),r=t(8453);function o(e){const n={admonition:"admonition",p:"p",...(0,r.R)(),...e.components};return(0,i.jsx)(n.admonition,{type:"info",children:(0,i.jsx)(n.p,{children:"Please note that this content is under development and is not ready for implementation. This status message will be updated as content development progresses."})})}function s(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(o,{...e})}):o(e)}},3611:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>l,contentTitle:()=>a,default:()=>p,frontMatter:()=>s,metadata:()=>c,toc:()=>d});var i=t(4848),r=t(8453),o=t(6961);const s={},a="Credential Router",c={id:"vckit-plugins/credential-router",title:"Credential Router",description:"This plugin is used to route for issuing and verifying verifiable credential that will navigate to the correct plugin based on the proof format of the credential.",source:"@site/versioned_docs/version-1.0.0/vckit-plugins/credential-router.md",sourceDirName:"vckit-plugins",slug:"/vckit-plugins/credential-router",permalink:"/docs/vckit-plugins/credential-router",draft:!1,unlisted:!1,editUrl:"https://github.com/uncefact/project-vckit/tree/main/versioned_docs/version-1.0.0/vckit-plugins/credential-router.md",tags:[],version:"1.0.0",frontMatter:{},sidebar:"getStartedSideBar",previous:{title:"Credential OpenAttestation Plugin",permalink:"/docs/vckit-plugins/credential-oa"},next:{title:"Encrypted Storage",permalink:"/docs/vckit-plugins/encrypted-storage"}},l={},d=[{value:"Usage",id:"usage",level:2}];function u(e){const n={code:"code",h1:"h1",h2:"h2",li:"li",p:"p",pre:"pre",ul:"ul",...(0,r.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.h1,{id:"credential-router",children:"Credential Router"}),"\n",(0,i.jsx)(o.Ay,{}),"\n",(0,i.jsx)(n.p,{children:"This plugin is used to route for issuing and verifying verifiable credential that will navigate to the correct plugin based on the proof format of the credential."}),"\n",(0,i.jsx)(n.h2,{id:"usage",children:"Usage"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["Add this declaration to ",(0,i.jsx)(n.code,{children:"agent.yml"})," config file"]}),"\n"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-yaml",children:"# Agent\nagent:\n  $require: '@veramo/core#Agent'\n  $args:\n    - schemaValidation: false\n      plugins:\n        - $require: '@vckit/credential-router#CredentialRouter'\n"})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"And export the functions of the plugin to be used in the application"}),"\n"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-yaml",children:"- routeCreationVerifiableCredential\n- routeVerificationCredential\n"})})]})}function p(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(u,{...e})}):u(e)}},8453:(e,n,t)=>{t.d(n,{R:()=>s,x:()=>a});var i=t(6540);const r={},o=i.createContext(r);function s(e){const n=i.useContext(o);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:s(e.components),i.createElement(o.Provider,{value:n},e.children)}}}]);